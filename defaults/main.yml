# Copyright 2022, BBC R&D
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

skyline_debug: false

# Set installation method
skyline_venv_python_executable: "{{ openstack_venv_python_executable | default('python3') }}"

# Set the package install state for distribution packages
# Options are 'present' and 'latest'
skyline_package_state: "{{ package_state | default('latest') }}"

# Set the host which will execute the shade modules
# for the service setup. The host must already have
# clouds.yaml properly configured.
skyline_service_setup_host: "{{ openstack_service_setup_host | default('localhost') }}"
skyline_service_setup_host_python_interpreter: >-
  {{
     openstack_service_setup_host_python_interpreter | default(
       (skyline_service_setup_host == 'localhost') | ternary(ansible_playbook_python, ansible_facts['python']['executable']))
  }}

skyline_git_repo: https://opendev.org/openstack/skyline-apiserver
skyline_git_install_branch: master

skyline_console_git_repo: https://opendev.org/openstack/skyline-console
skyline_console_git_install_branch: master

skyline_upper_constraints_url: >-
  {{ requirements_git_url | default('https://releases.openstack.org/constraints/upper/' ~ requirements_git_install_branch | default('master')) }}
skyline_git_constraints: []
#  - "--constraint {{ skyline_upper_constraints_url }}"

skyline_pip_install_args: "{{ pip_install_options | default('') }}"

# Name of the virtual env to deploy into
skyline_venv_tag: "{{ venv_tag | default('untagged') }}"
skyline_bin: "/openstack/venvs/skyline-{{ skyline_venv_tag }}/bin"
skyline_lib_static_files: "{{ skyline_lib_dir }}/skyline_console/static"

## Database info
skyline_db_setup_host: "{{ openstack_db_setup_host | default('localhost') }}"
skyline_db_setup_python_interpreter: >-
  {{
     openstack_db_setup_python_interpreter | default(
       (skyline_db_setup_host == 'localhost') | ternary(ansible_playbook_python, ansible_facts['python']['executable']))
  }}
skyline_galera_address: "{{ galera_address | default('127.0.0.1') }}"
skyline_galera_database: skyline
skyline_galera_user: skyline
skyline_galera_password: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}"
skyline_galera_use_ssl: "{{ galera_use_ssl | default(False) }}"
skyline_galera_ssl_ca_cert: "{{ galera_ssl_ca_cert | default('') }}"
skyline_galera_port: "{{ galera_port | default('3306') }}"
skyline_db_max_overflow: "{{ openstack_db_max_overflow | default('50') }}"
skyline_db_max_pool_size: "{{ openstack_db_max_pool_size | default('5') }}"
skyline_db_pool_timeout: "{{ openstack_db_pool_timeout | default('30') }}"
skyline_db_connection_recycle_time: "{{ openstack_db_connection_recycle_time | default('600') }}"

## System User / Group
skyline_system_user_name: skyline
skyline_system_group_name: skyline
skyline_system_comment: skyline system user
skyline_system_shell: /bin/false
skyline_system_user_home: "/var/lib/{{ skyline_system_user_name }}"

## Service user
skyline_service_user_name: skyline
skyline_service_password: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}"
skyline_service_project_name: service
skyline_service_project_domain_id: default
skyline_service_user_domain_id: default
skyline_service_in_ldap: "{{ service_ldap_backend_enabled | default(False) }}"
skyline_role_name: admin

# API
skyline_bind_address: "{{ openstack_service_bind_address | default('0.0.0.0') }}"
skyline_service_port: 9999
skyline_prometheus_basic_auth_password: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}"
skyline_prometheus_basic_auth_user: 'skyline'
skyline_secret_key: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}"
skyline_interface: internal

# Common pip packages
skyline_pip_packages:
  - "git+{{ skyline_git_repo }}@{{ skyline_git_install_branch }}#egg=skyline-apiserver"
  - "git+{{ skyline_console_git_repo }}@{{ skyline_console_git_install_branch }}#egg=skyline-console"

## Service Name-Group Mapping
skyline_services:
  skyline-api:
    group: skyline_all
    service_name: skyline-apiserver
    init_config_overrides: "{{ skyline_apiserver_init_overrides }}"
    start_order: 1
    execstarts: "{{ skyline_bin }}/gunicorn -c /etc/skyline/gunicorn.py skyline_apiserver.main:app"

## Tunable overrides
skyline_apiserver_init_overrides: {}
skyline_skyline_yaml_overrides: {}
